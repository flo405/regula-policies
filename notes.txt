
- Gitops: Deklarierter State muss laufen. Schützt nur indirekt (Prozess, Peer-Review) vor Fehlkonfigurationen.

- Gitops + Policy as Code = Trusted Delivery: Welche Konfigurationen sind (nicht) erlaubt?

- Security Guardrails für IaC, wichtig für große und dezentrale Organisationen

- Built-in Rules nicht ausreichend (zB kein Exoscale, nicht auf Netzwerk Architektur abgestimmt)

- Custom Rules mächtig, aber Business Model dahinter kein SaaS sondern Consulting

- Custom Rules als Consulting Angebot skalierbar (Synergien durch Templates)

- Wer erstellt Custom Rules in der Organisation? (nicht Devs, InfoSec will nur entscheiden - nicht Code schreiben)

- Policy as Code erweitert Funktionalität von kleinen Cloud Providern wie Exoscale

- Kubernetes / Argo CD: Gatekeeper
	
	https://github.com/open-policy-agent/gatekeeper
	https://github.com/open-policy-agent/gatekeeper-library
	https://open-policy-agent.github.io/gatekeeper/website/docs/
	https://open-policy-agent.github.io/gatekeeper-library/website/pspintro

regula run --no-built-ins --include /Users/flo/Code/terraform/exoscale/policies .

regula run -f json --no-built-ins --include /Users/flo/Code/terraform/exoscale/policies . | jq

checkov -d . --external-checks-dir /Users/flo/Code/terraform/exoscale/checkov

checkov -d . --skip-download --external-checks-dir /Users/flo/Code/terraform/exoscale/checkov


